import numpy as np, matplotlib.pyplot as plt

def lowess(x, y, f=0.25, it=3):
    n, r = len(x), int(np.ceil(f * len(x)))
    h = np.partition(np.abs(x[:, None] - x), r, axis=1)[:, r]
    w = (1 - np.clip(np.abs((x[:, None] - x) / h[:, None]), 0, 1)**3)**3
    yest, X = np.zeros(n), np.stack((np.ones(n), x), axis=1)
    for _ in range(it):
        for i in range(n):
            W = np.diag(w[:, i])
            beta, *_ = np.linalg.lstsq(W @ X, W @ y, rcond=None)
            yest[i] = beta @ [1, x[i]]
        r = y - yest
        s = np.median(np.abs(r))
        w *= ((1 - np.clip(r / (6*s), -1, 1)**2)**2)[:, None]
    return yest

x = np.linspace(0, 2*np.pi, 100)
y = np.sin(x) + 0.3*np.random.randn(100)
plt.plot(x, y, 'r.', x, lowess(x, y), 'b-')
plt.show()
